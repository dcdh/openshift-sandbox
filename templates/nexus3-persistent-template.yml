apiVersion: v1
kind: Template
labels:
  template: nexus3-persistent-template
metadata:
  name: nexus3-persistent
  annotations:
    description: Sonatype Nexus 3 persistent template
    tags: ci,nexus
objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: nexus3-init-script-configmap
    data:
      nexus-functions: |-
        # https://raw.githubusercontent.com/OpenShiftDemos/nexus/master/scripts/nexus-functions
        function add_nexus3_repo() {
          local _REPO_ID=$1
          local _REPO_URL=$2
          local _NEXUS_USER=$3
          local _NEXUS_PWD=$4
          local _NEXUS_URL=$5
          read -r -d '' _REPO_JSON << EOM
        {
          "name": "$_REPO_ID",
          "type": "groovy",
          "content": "repository.createMavenProxy('$_REPO_ID','$_REPO_URL')"
        }
        EOM
          # Pre Nexus 3.8
          curl -v -H "Accept: application/json" -H "Content-Type: application/json" -d "$_REPO_JSON" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/siesta/rest/v1/script/"
          curl -v -X POST -H "Content-Type: text/plain" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/siesta/rest/v1/script/$_REPO_ID/run"
          # Post Nexus 3.8
          curl -v -H "Accept: application/json" -H "Content-Type: application/json" -d "$_REPO_JSON" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/rest/v1/script/"
          curl -v -X POST -H "Content-Type: text/plain" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/rest/v1/script/$_REPO_ID/run"
        }
        function add_nexus3_group_repo() {
          local _REPO_IDS=$1
          local _GROUP_ID=$2
          local _NEXUS_USER=$3
          local _NEXUS_PWD=$4
          local _NEXUS_URL=$5
          read -r -d '' _REPO_JSON << EOM
        {
          "name": "$_GROUP_ID",
          "type": "groovy",
          "content": "repository.createMavenGroup('$_GROUP_ID', '$_REPO_IDS'.split(',').toList())"
        }
        EOM
          # Pre Nexus 3.8
          curl -v -H "Accept: application/json" -H "Content-Type: application/json" -d "$_REPO_JSON" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/siesta/rest/v1/script/"
          curl -v -X POST -H "Content-Type: text/plain" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/siesta/rest/v1/script/$_GROUP_ID/run"
          # Post Nexus 3.8
          curl -v -H "Accept: application/json" -H "Content-Type: application/json" -d "$_REPO_JSON" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/rest/v1/script/"
          curl -v -X POST -H "Content-Type: text/plain" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/rest/v1/script/$_GROUP_ID/run"
        }
        function add_nexus3_redhat_repos() {
          local _NEXUS_USER=$1
          local _NEXUS_PWD=$2
          local _NEXUS_URL=$3
          add_nexus3_repo jboss-ce https://repository.jboss.org/nexus/content/groups/public/ $_NEXUS_USER $_NEXUS_PWD $_NEXUS_URL
          add_nexus3_group_repo maven-central,maven-releases,maven-snapshots,jboss-ce maven-all-public $_NEXUS_USER $_NEXUS_PWD $_NEXUS_URL
        }
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${SERVICE_NAME}
      name: ${SERVICE_NAME}
    spec:
      tags:
        - from:
            kind: DockerImage
            name: docker.io/sonatype/nexus3:${NEXUS_VERSION}
          name: ${NEXUS_VERSION}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${SERVICE_NAME}
      name: ${SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        deploymentconfig: ${SERVICE_NAME}
      strategy:
        recreateParams:
          timeoutSeconds: 600
          post:
            failurePolicy: Abort
            execNewPod:
              containerName: ${SERVICE_NAME}
              command:
                - "/bin/bash"
                - "-c"
                - "source /tmp/nexus-functions; add_nexus3_redhat_repos admin admin123 http://${SERVICE_NAME}:8081"
              volumes:
                - init-script
        type: Recreate
      volumes:
        - name: init-script
          configMap:
            name: nexus3-init-script-configmap
      template:
        metadata:
          labels:
            deploymentconfig: ${SERVICE_NAME}
        spec:
          containers:
            - env:
                - name: CONTEXT_PATH
                  value: /
              image: ' '
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                    - echo
                    - ok
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: ${SERVICE_NAME}
              ports:
                - containerPort: 8081
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 8081
                  scheme: HTTP
                initialDelaySeconds: 60
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  memory: ${MAX_MEMORY}
                requests:
                  memory: 512Mi
              terminationMessagePath: /dev/termination-log
              volumeMounts:
                - mountPath: /nexus-data
                  name: ${SERVICE_NAME}-data
                - mountPath: /tmp
                  name: init-script
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: ${SERVICE_NAME}-data
              persistentVolumeClaim:
                claimName: ${SERVICE_NAME}-pv
            - name: init-script
              configMap:
                name: nexus3-init-script-configmap
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${SERVICE_NAME}
            from:
              kind: ImageStreamTag
              name: ${SERVICE_NAME}:${NEXUS_VERSION}
          type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${SERVICE_NAME}
      name: ${SERVICE_NAME}
    spec:
      ports:
        - name: 8081-tcp
          port: 8081
          protocol: TCP
          targetPort: 8081
      selector:
        deploymentconfig: ${SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${SERVICE_NAME}
      name: ${SERVICE_NAME}
    spec:
      port:
        targetPort: 8081-tcp
      to:
        kind: Service
        name: ${SERVICE_NAME}
        weight: 100
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: ${SERVICE_NAME}
      name: ${SERVICE_NAME}-pv
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
parameters:
  - displayName: Sonatype Nexus service name
    name: SERVICE_NAME
    required: true
    value: nexus
  - displayName: Sonatype Nexus version
    name: NEXUS_VERSION
    required: true
    value: 3.6.0
  - description: Volume space available for Sonatype Nexus e.g. 512Mi, 2Gi
    displayName: Volume Space for Nexus
    name: VOLUME_CAPACITY
    required: true
    value: 2Gi
  - description: Max memory allocated to the Nexus pod
    displayName: Max Memory
    name: MAX_MEMORY
    required: true
    value: 1Gi